{"version":3,"sources":["Square.js","Restart.js","Board.js","App.js","index.js"],"names":["Square","props","className","onClick","value","Restart","Board","status","useState","Array","fill","squares","setSquares","xIsNext","setXIsNext","renderSquare","i","copySquares","slice","calculateWinner","handleSquareClick","lines","length","a","b","c","winner","isBoardFull","App","ReactDOM","render","document","getElementById"],"mappings":"0KAYeA,EAVA,SAAAC,GACX,OACI,4BACIC,UAAU,SACVC,QAASF,EAAME,SACdF,EAAMG,QCGJC,EARC,SAAAJ,GACZ,OACI,4BAAQC,UAAU,UAAUC,QAASF,EAAME,SAA3C,WCoGOG,EApGD,WAAO,IAuDbC,EAvDY,EACcC,mBAASC,MAAM,GAAGC,KAAK,OADrC,mBACTC,EADS,KACAC,EADA,OAEcJ,oBAAS,GAFvB,mBAETK,EAFS,KAEAC,EAFA,KAcVC,EAAe,SAAAC,GACjB,OACI,kBAAC,EAAD,CACIZ,MAAOO,EAAQK,GACfb,QAAS,kBAdK,SAAAa,GACtB,IAAMC,EAAcN,EAAQO,QACzBC,EAAgBR,IAAYA,EAAQK,KAGvCC,EAAYD,GAAKH,EAAU,IAAM,IACjCD,EAAWK,GACXH,GAAYD,IAOWO,CAAkBJ,OAKvCG,EAAkB,SAAAR,GAYpB,IAXA,IAAMU,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFL,EAAI,EAAGA,EAAIK,EAAMC,OAAQN,IAAK,CAAC,IAAD,cACjBK,EAAML,GADW,GAC5BO,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAId,EAAQY,IAAMZ,EAAQY,KAAOZ,EAAQa,IAAMb,EAAQY,KAAOZ,EAAQc,GAElE,OAAOd,EAAQY,GAGvB,OAAO,MAWLG,EAASP,EAAgBR,GAI3BJ,EADAmB,EACS,WAAaA,EAZN,SAAAf,GAChB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAQW,OAAQN,IAChC,GAAkB,MAAdL,EAAQK,GAAY,OAAO,EAEnC,OAAO,EASAW,CAAYhB,GACV,YAEA,iBAAmBE,EAAU,IAAK,KAgB/C,OACI,6BACI,yBAAKX,UAAU,UAAUK,GACzB,yBAAKL,UAAU,aACVa,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKb,UAAU,aACVa,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKb,UAAU,aACVa,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKb,UAAU,kBAxBf,kBAAC,EAAD,CACIC,QAAS,kBAPjBS,EAAWH,MAAM,GAAGC,KAAK,YACzBI,GAAW,SC3DJc,EARH,WACR,OACI,yBAAK1B,UAAU,aACX,kBAAC,EAAD,QCDZ2B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.ca169105.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = props => {\r\n    return(\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square","import React from 'react'\r\n\r\nconst Restart = props => {\r\n    return(\r\n        <button className=\"restart\" onClick={props.onClick}>\r\n            Replay\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Restart","import React, {useState} from 'react'\r\nimport Square from './Square'\r\nimport Restart from './Restart'\r\n\r\nconst Board = () => {\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n\r\n    const handleSquareClick = i => {\r\n        const copySquares = squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        copySquares[i] = xIsNext ? 'X' : 'O';\r\n        setSquares(copySquares);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n\r\n    const renderSquare = i => {\r\n        return(\r\n            <Square\r\n                value={squares[i]}\r\n                onClick={() => handleSquareClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const calculateWinner = squares => {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let i = 0; i < lines.length; i ++){\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\r\n            {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const isBoardFull = squares => {\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i] == null) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    const winner = calculateWinner(squares);\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner;\r\n    } else if (isBoardFull(squares)) {\r\n        status = \"Game Over\";\r\n    }else {\r\n        status = 'Next player: ' + (xIsNext ? 'X': 'O');\r\n    }\r\n\r\n    const handleRestartClick = () => {\r\n        setSquares(Array(9).fill(null));\r\n        setXIsNext(true);\r\n    }\r\n\r\n    const renderRestart = () => {\r\n        return(\r\n            <Restart\r\n                onClick={() => handleRestartClick()}\r\n            />\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n            <div className=\"restart-button\">{renderRestart()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Board from './Board'\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <Board/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}